env:
  version: v3.20

name: Alpine x86 ISO Builder

on:
  push:
    tags:
    - 'v*'
  workflow_dispatch:

jobs:
  build_ISOs:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install software
        run: |
          apk update
          apk upgrade
          apk --no-cache add alpine-sdk build-base apk-tools alpine-conf \
              busybox fakeroot syslinux xorriso squashfs-tools sudo mtools \
              dosfstools grub-efi
        container:
          image: alpine:3.20

      - name: Download aports
        run: git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git
        container:
          image: alpine:3.20

      - name: Configure build keys
        run: echo | abuild-keygen -i -a
        container:
          image: alpine:3.20

      - name: Make ISO (${{ env.version }})
        run: |
          chmod +x *.sh
          mv *.sh aports/scripts/
          cd aports/scripts/

          ./mkimage.sh \
              --tag ${version} \
              --arch x86 \
              --profile docker \
              --outdir ../../ \
              --repository https://dl-cdn.alpinelinux.org/alpine/${version}/main \
              --repository https://dl-cdn.alpinelinux.org/alpine/${version}/community
        container:
          image: alpine:3.20

      - name: Create and push tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${version} -m "Release ${version}"
          git push origin ${version}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          prerelease: false
          files: |
            *.iso
